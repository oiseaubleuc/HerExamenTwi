name: CI Docker Build & Push

on:
  push:
    branches: [ "main" ]


jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: pdo_sqlite, mbstring, bcmath, intl
          coverage: none

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Write .env.testing (SQLite in-memory)
        run: |
          cat > .env.testing <<'ENV'
          APP_ENV=testing
          APP_KEY=base64:Q7wXtO8a3dRQHq5IM4NsPZ8MthM4T0DyQw5sV0D9Nl8=
          APP_DEBUG=true
          LOG_CHANNEL=stack
          CACHE_DRIVER=array
          SESSION_DRIVER=array
          QUEUE_CONNECTION=sync
          DB_CONNECTION=sqlite
          DB_DATABASE=:memory:
          ENV

      - name: Run tests
        run: php artisan test

  docker:
    if: github.event_name == 'push'
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/herexamentwi:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/herexamentwi:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
